@model App.Domain.DTOs.PatientCommand
@using App.Domain.Resources;
<style type="text/css">
    .has-error .help-block, .fa-times {
        color: red;
    }
    .fa-check {
        color: green;
    }

</style>
<script src="~/ajax/patient.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
            $('#validation_form').bootstrapValidator({
                live: 'enabled',
                message: 'This value is not valid',
                feedbackIcons: {
                    valid: 'fa fa-check',
                    invalid: 'fa fa-times',
                    validating: 'glyphicon glyphicon-refresh'
                },
                fields: {
                    Gender: {
                        validators: {
                            notEmpty: {
                                message: 'Please select gender'
                            }
                        }
                    },
                    PasNumber: {
                        validators: {
                            notEmpty: {
                                message: 'Please enter Passport number'
                            }
                        }
                    },
                    ForeName: {
                        validators: {
                            notEmpty: {
                                message: 'Please enter fore name'
                            }
                        }
                    },
                    DateOfBirth: {
                        validators: {
                            notEmpty: {
                                message: 'Please enter Date Of Birth'
                            },
                            date: {
                                format: 'YYYY/MM/DD',
                                message: 'Incorrect format'
                            }
                        }
                    },
                    SurName: {
                        validators: {
                            notEmpty: {
                                message: 'Please enter sur name'
                            }
                        }
                    },
                    HomeTelephoneNumber: {
                        validators: {
                            integer: {
                                message: 'Incorrect number'
                            },
                            stringLength: {
                                max: 12,
                                min: 12,
                                message: 'Max numbers is 12'
                            }
                        }
                    }
                }
            }).on('success.form.bv',
                function (e) {
                    $('#validation_form').data('bootstrapValidator').resetForm();
                    // Prevent form submission
                    e.preventDefault();

                    // Get the form instance
                    var $form = $(e.target);

                    // Get the BootstrapValidator instance
                    var bv = $form.data('bootstrapValidator');

                    // Use Ajax to submit form data
                    SubmitData();
                });


            $('#DateOfBirth')
                .on('dp.change dp.show',
                    function (e) {
                        // Validate the date when user change it
                        $('#validation_form').data('bootstrapValidator').revalidateField('DateOfBirth');
                    });
        });

    function SubmitData() {
        window.ManagePatientBasicInfo("../ManagePatientBasicInfo",
            1,
            null,
            $('#Gender').val(),
            $('#PasNumber').val(),
            $('#ForeName').val(),
            $('#SurName').val(),
            $('#DateOfBirth').val(),
            $('#HomeTelephoneNumber').val(),
            "Record saved successfully",
            "Error occured"
        )
    }
</script>

<div class="modal-header">
    <h4 class="modal-title text-info">@ViewBag.ModalTitle</h4>
    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
</div>
@using (Html.BeginForm(null, null, FormMethod.Post, new { @id = "validation_form", role = "form", enctype = "multipart/form-data" }))
{
    <div class="modal-body">
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row row-fluid">
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ForeName, AppPatientBasicInfo.lblForeName, htmlAttributes: new { @class = "col-md-12" })
                        <div class="col-md-12">
                            @Html.TextBoxFor(model => model.ForeName, new { @class = "form-control", @placeholder = AppPatientBasicInfo.lblForeName })
                            @Html.ValidationMessageFor(model => model.ForeName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row row-fluid">
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.SurName, AppPatientBasicInfo.lblSurName, htmlAttributes: new { @class = "col-md-12" })
                        <div class="col-md-12">
                            @Html.TextBoxFor(model => model.SurName, new { @class = "form-control", @placeholder = AppPatientBasicInfo.lblSurName })
                            @Html.ValidationMessageFor(model => model.SurName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row row-fluid">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.PasNumber, AppPatientBasicInfo.lblPasNumber, htmlAttributes: new { @class = "col-md-12" })
                        <div class="col-md-12">
                            @Html.TextBoxFor(model => model.PasNumber, new { @class = "form-control", @placeholder = AppPatientBasicInfo.lblPasNumber })
                            @Html.ValidationMessageFor(model => model.PasNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Gender, AppPatientBasicInfo.lblGender, htmlAttributes: new { @class = "col-md-12" })
                        <div class="col-md-12">
                            <select id="Gender" class="form-control">
                                <option>@AppSettings.lblChoose</option>
                                <option value="M">@AppSettings.lblMale</option>
                                <option value="F">@AppSettings.lblFemale</option>
                            </select>
                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row row-fluid">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.DateOfBirth, AppPatientBasicInfo.lblDOB, htmlAttributes: new { @class = "col-md-12" })
                        <div class="col-md-12">
                            @Html.TextBoxFor(model => model.DateOfBirth, "{0:yyyy/MM/dd}", new { @class = "form-control", @type = "date", @placeholder = AppPatientBasicInfo.lblDOB })
                            @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.HomeTelephoneNumber, AppPatientBasicInfo.lblTel, htmlAttributes: new { @class = "col-md-12" })
                        <div class="col-md-12">
                            @Html.TextBoxFor(model => model.HomeTelephoneNumber, new { @class = "form-control", @placeholder = AppPatientBasicInfo.lblTel })
                            @Html.ValidationMessageFor(model => model.HomeTelephoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal-footer">
        <button type="submit" class="btn btn-primary" id="btnSubmit">@AppSettings.Savebtn</button>
        <button type="button" class="btn btn-danger" data-dismiss="modal">@AppSettings.Closebtn</button>
    </div>

}